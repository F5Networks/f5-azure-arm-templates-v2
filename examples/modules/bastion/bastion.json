{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":"2.9.0.0",
    "parameters":{
        "adminUsername":{
            "defaultValue":"azureuser",
            "metadata":{
                "description":"Admin username applied to bastion Virtual Machine."
            },
            "type":"string"
        },
        "sshKey":{
            "metadata":{
                "description":"REQUIRED - Supply the public key that will be used for SSH authentication to the bastion virtual machines."
            },
            "type":"string"
        },
        "createAutoscaleGroup":{
            "defaultValue":true,
            "metadata":{
                "description":"Choose true to create the bastion instances in an autoscaling configuration."
            },
            "type":"bool"
        },
        "instanceName":{
            "defaultValue":"vm01",
            "metadata":{
                "description":"VM instance name."
            },
            "type":"string"
        },
        "instanceType":{
            "defaultValue":"Standard_D2_v4",
            "metadata":{
                "description":"Enter valid instance type."
            },
            "type":"string"
        },
        "subnetId":{
            "metadata":{
                "description":"REQUIRED - Enter the subnet ID to use."
            },
            "type":"string"
        },
        "nsgId":{
            "defaultValue":"",
            "metadata":{
                "description":"Enter security group id to use. Use default if you do not wish to apply an NSG policy."
            },
            "type":"string"
        },
        "publicIpId": {
            "defaultValue": "",
            "metadata": {
                "description": "The resource ID of the public IP address to apply to the management network interface. Leave this parameter blank when creating an autoscaled group of bastion hosts."
            },
            "type": "string"
        },
        "cloudInitUrl":{
            "defaultValue":"",
            "metadata":{
                "description":"URl to cloud-init file used for customizing VM."
            },
            "type":"string"
        },
        "tagValues":{
            "defaultValue":{
                "application": "f5demoapp",
                "cost": "f5cost",
                "environment":"f5env",
                "group": "f5group",
                "owner": "f5owner"
            },
            "metadata":{
                "description":"Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
            },
            "type":"object"
        },
        "vmScaleSetMaxCount":{
            "defaultValue":10,
            "metadata":{
                "description":"The maximum number of bastion instances that can be deployed into the VM Scale Set."
            },
            "type":"int"
        },
        "vmScaleSetMinCount":{
            "defaultValue":1,
            "metadata":{
                "description":"The minimum (and default) number of bastion instances that will be deployed into the VM Scale Set."
            },
            "type":"int"
        }
    },
    "variables":{
        "cloudInit":"[concat('#include\n',parameters('cloudInitUrl'))]",
        "commandToExecute":"echo \"***** Welcome to Bastion Host *****\" > /etc/motd",
        "imageReference":{
            "offer":"0001-com-ubuntu-server-focal",
            "publisher":"Canonical",
            "sku":"20_04-lts",
            "version":"latest"
        },
        "nicName":"[concat(variables('vmName'), '-nic-01')]",
        "networkSecurityGroup":{
            "id":"[parameters('nsgId')]"
        },
        "storageAccountType":"Standard_LRS",
        "storageName":"[concat(uniqueString(resourceGroup().name, resourceGroup().id, deployment().name), 'stbastion')]",
        "vmName":"[concat(parameters('instanceName'), '-bastion-vm-01')]",
        "vmssName":"[concat(parameters('instanceName'), '-bastion-vmss')]"
    },
    "resources":[
        {
            "apiVersion":"2022-09-01",
            "kind":"Storage",
            "location":"[resourceGroup().location]",
            "name":"[variables('storageName')]",
            "properties":{
                "allowBlobPublicAccess": false,
                "supportsHttpsTrafficOnly": true            },
            "sku":{
                "name":"[variables('storageAccountType')]",
                "tier":"Standard"
            },
            "tags":"[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
            "type":"Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion":"2020-06-01",
            "condition":"[not(parameters('createAutoscaleGroup'))]",
            "location":"[resourceGroup().location]",
            "name":"[variables('nicName')]",
            "properties":{
                "ipConfigurations":[
                    {
                        "name":"[concat(variables('vmName'), '-ipconfig1')]",
                        "properties":{
                            "privateIPAllocationMethod":"Dynamic",
                            "publicIpAddress": {
                                "id": "[parameters('publicIpId')]"
                            },
                            "subnet":{
                                "id":"[parameters('subnetId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup":"[if(empty(parameters('nsgId')), json('null'), variables('networkSecurityGroup'))]"
            },
            "tags":"[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
            "type":"Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion":"2019-12-01",
            "condition":"[not(parameters('createAutoscaleGroup'))]",
            "dependsOn":[
                "[variables('nicName')]",
                "[variables('storageName')]"
            ],
            "location":"[resourceGroup().location]",
            "name":"[variables('vmName')]",
            "properties":{
                "diagnosticsProfile":{
                    "bootDiagnostics":{
                        "enabled":true,
                        "storageUri":"[concat('https://', variables('storageName'), '.blob.', environment().suffixes.storage)]"
                    }
                },
                "hardwareProfile":{
                    "vmSize":"[parameters('instanceType')]"
                },
                "networkProfile":{
                    "networkInterfaces":[
                        {
                            "id":"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "osProfile":{
                    "adminUsername":"[parameters('adminUsername')]",
                    "linuxConfiguration":{
                        "disablePasswordAuthentication":true,
                        "ssh":{
                            "publicKeys":[
                                {
                                    "keyData":"[parameters('sshKey')]",
                                    "path":"[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                                }
                            ]
                        }
                    },
                    "computerName":"[variables('vmName')]",
                    "customData":"[base64(variables('cloudInit'))]"
                },
                "storageProfile":{
                    "imageReference":"[variables('imageReference')]",
                    "osDisk":{
                        "createOption":"fromImage",
                        "caching":"ReadWrite"
                    }
                }
            },
            "tags":"[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
            "type":"Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion":"2019-12-01",
            "condition":"[not(parameters('createAutoscaleGroup'))]",
            "dependsOn":[
                "[variables('vmName')]"
            ],
            "location":"[resourceGroup().location]",
            "name":"[concat(variables('vmName'),'/vmInit')]",
            "properties":{
                "publisher":"Microsoft.Azure.Extensions",
                "settings":{
                    "commandToExecute":"[variables('commandToExecute')]"
                },
                "type":"CustomScript",
                "typeHandlerVersion":"2.0"
            },
            "type":"Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "apiVersion":"2019-12-01",
            "condition":"[parameters('createAutoscaleGroup')]",
            "dependsOn":[
                "[variables('storageName')]"
            ],
            "location":"[resourceGroup().location]",
            "name":"[variables('vmssName')]",
            "properties":{
                "overprovision":"false",
                "upgradePolicy":{
                    "mode":"Manual"
                },
                "virtualMachineProfile":{
                    "extensionProfile":{
                        "extensions":[
                            {
                                "name":"vmInit",
                                "properties":{
                                    "autoUpgradeMinorVersion":true,
                                    "publisher":"Microsoft.Azure.Extensions",
                                    "settings":{
                                        "commandToExecute":"[variables('commandToExecute')]"
                                    },
                                    "type":"CustomScript",
                                    "typeHandlerVersion":"2.0"
                                }
                            }
                        ]
                    },
                    "networkProfile":{
                        "networkInterfaceConfigurations":[
                            {
                                "name":"nic1",
                                "properties":{
                                    "ipConfigurations":[
                                        {
                                            "name":"ipconfig1",
                                            "properties":{
                                                "publicIpAddressConfiguration": {
                                                    "name": "publicIp01",
                                                    "properties": {
                                                        "idleTimeoutInMinutes": 15
                                                    }
                                                },
                                                "subnet":{
                                                    "id":"[parameters('subnetId')]"
                                                }
                                            }
                                        }
                                    ],
                                    "networkSecurityGroup":"[if(empty(parameters('nsgId')), json('null'), variables('networkSecurityGroup'))]",
                                    "primary":true
                                }
                            }
                        ]
                    },
                    "osProfile":{
                        "adminUsername":"[parameters('adminUsername')]",
                        "computerNamePrefix":"[variables('vmssName')]",
                        "customData":"[base64(variables('cloudInit'))]",
                        "linuxConfiguration":{
                            "disablePasswordAuthentication":true,
                            "ssh":{
                                "publicKeys":[
                                    {
                                        "keyData":"[parameters('sshKey')]",
                                        "path":"[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                                    }
                                ]
                            }
                        }
                    },
                    "storageProfile":{
                        "imageReference":"[variables('imageReference')]",
                        "osDisk":{
                            "createOption":"FromImage",
                            "caching":"ReadWrite"
                        }
                    },
                    "diagnosticsProfile":{
                        "bootDiagnostics":{
                            "enabled":true,
                            "storageUri":"[concat('https://', variables('storageName'), '.blob.', environment().suffixes.storage)]"
                        }
                    }
                }
            },
            "sku":{
                "capacity":2,
                "name":"[parameters('instanceType')]",
                "tier":"Standard"
            },
            "tags":"[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
            "type":"Microsoft.Compute/virtualMachineScaleSets"
        },
        {
            "apiVersion":"2015-04-01",
            "condition":"[parameters('createAutoscaleGroup')]",
            "type":"Microsoft.Insights/autoscaleSettings",
            "name":"[concat(variables('vmssName'), '-autoscale-settings')]",
            "location":"[resourceGroup().location]",
            "dependsOn":[
                "[variables('vmssName')]"
            ],
            "properties":{
                "name":"[concat(variables('vmssName'), '-autoscale-settings')]",
                "targetResourceUri":"[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                "enabled":true,
                "profiles":[
                    {
                        "name":"Profile1",
                        "capacity":{
                            "minimum":"[parameters('vmScaleSetMinCount')]",
                            "maximum":"[parameters('vmScaleSetMaxCount')]",
                            "default":"[parameters('vmScaleSetMinCount')]"
                        },
                        "rules":[
                            {
                                "metricTrigger":{
                                    "metricName":"Percentage CPU",
                                    "metricNamespace":"",
                                    "metricResourceUri":"[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                                    "timeGrain":"PT1M",
                                    "statistic":"Average",
                                    "timeWindow":"PT5M",
                                    "timeAggregation":"Average",
                                    "operator":"GreaterThan",
                                    "threshold":60
                                },
                                "scaleAction":{
                                    "direction":"Increase",
                                    "type":"ChangeCount",
                                    "value":"1",
                                    "cooldown":"PT1M"
                                }
                            },
                            {
                                "metricTrigger":{
                                    "metricName":"Percentage CPU",
                                    "metricNamespace":"",
                                    "metricResourceUri":"[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                                    "timeGrain":"PT1M",
                                    "statistic":"Average",
                                    "timeWindow":"PT5M",
                                    "timeAggregation":"Average",
                                    "operator":"LessThan",
                                    "threshold":30
                                },
                                "scaleAction":{
                                    "direction":"Decrease",
                                    "type":"ChangeCount",
                                    "value":"1",
                                    "cooldown":"PT5M"
                                }
                            }
                        ]
                    }
                ]
            }
        }
    ],
    "outputs":{
        "vmName":{
            "condition":"[not(parameters('createAutoscaleGroup'))]",
            "type":"string",
            "value":"[variables('vmName')]"
        },
        "resourceGroupName":{
            "condition":"[parameters('createAutoscaleGroup')]",
            "type":"string",
            "value":"[resourceGroup().name]"
        },
        "vmssId":{
            "condition":"[parameters('createAutoscaleGroup')]",
            "type":"string",
            "value":"[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]"
        },
        "vmssName":{
            "condition":"[parameters('createAutoscaleGroup')]",
            "type":"string",
            "value":"[variables('vmssName')]"
        }
    }
}